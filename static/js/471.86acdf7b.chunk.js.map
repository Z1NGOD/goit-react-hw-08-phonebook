{"version":3,"file":"static/js/471.86acdf7b.chunk.js","mappings":"sLAEMA,E,QAAQC,EAAAA,MAAH,6C,qICDLC,EAAOD,EAAAA,EAAAA,KAAH,6GAOJE,EAAWF,EAAAA,EAAAA,GAAH,oFAMRG,EAAQH,EAAAA,EAAAA,MAAH,iY,uPCELI,EAAgB,CACpBC,MAAO,GACPC,SAAU,IAoEZ,MAjEA,WACE,OAAgCC,EAAAA,EAAAA,WAAS,UAAKH,IAA9C,eAAOI,EAAP,KAAiBC,EAAjB,KACA,GAAgBC,EAAAA,EAAAA,MAATC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAoB,SAAAC,GACxB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACdX,GAAY,SAAAY,GAAS,yBAChBA,GADgB,cAElBF,EAAOC,GAFW,GAItB,EAEKE,EAAY,mCAAG,WAAML,GAAN,4EACnBA,EAAEM,kBACEf,EAASH,QAASG,EAASF,SAFZ,gCAGMK,EAAMH,GAHZ,iBAGTgB,EAHS,EAGTA,QAENZ,GAASa,EAAAA,EAAAA,IAASD,EAAKE,QACvBZ,EAAS,MANM,OASnBa,IATmB,2CAAH,sDAWZA,EAAQ,WACZlB,GAAY,UAAKL,GAClB,EACD,OACE,UAAC,IAAD,YACE,SAAC,KAAD,UAAU,aACV,UAAC,KAAD,CAAMwB,SAAUN,EAAhB,WACE,SAAC,IAAD,CAAOO,QAAQ,QAAf,SAAuB,WACvB,SAAC,KAAD,CACEC,KAAK,QACLC,GAAG,QACHZ,KAAK,QACLC,MAAOZ,EAASH,MAChB2B,SAAUhB,EACViB,YAAY,oBACZC,UAAQ,KAEV,SAAC,IAAD,CAAOL,QAAQ,WAAf,SAA0B,eAC1B,SAAC,KAAD,CACEC,KAAK,WACLC,GAAG,WACHZ,KAAK,WACLC,MAAOZ,EAASF,SAChB0B,SAAUhB,EACViB,YAAY,WACZE,QAAQ,UACRC,MAAM,+CACNF,UAAQ,KAGV,SAAC,IAAD,CAAKJ,KAAK,SAAV,SAAmB,eAErB,UAAC,IAAD,WAAM,gCAC0B,KAC9B,SAAC,KAAD,CAASO,GAAG,YAAZ,SAAwB,oBAI/B,EC3ED,MANA,WACE,OACE,SAAC,EAAD,GAEH,C,sECNKC,E,QAAOtC,EAAAA,EAAH,mF,uBCDV,SAASuC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChB1B,EAAQ2B,EAAK3B,KAInB,CAHE,MAAO4B,GAEP,YADAN,EAAOM,EAET,CACID,EAAKE,KACPR,EAAQrB,GAER8B,QAAQT,QAAQrB,GAAO+B,KAAKR,EAAOC,EAEvC,CACe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GACzB,SAASb,EAAMvB,GACbmB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQxB,EAClE,CACA,SAASwB,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CACAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/Login/Login.styled.js","components/PhoneBook/PhoneBookStyles.styled.js","components/Login/Login.jsx","pages/LoginPage/LoginPage.jsx","ui/Text.styled.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst Label = styled.label`\n  font-weight: bold;\n`;\n\nexport { Label };\n","import styled from \"@emotion/styled\";\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  max-width: 360px;\n  margin: 0 auto;\n`;\n\nconst MainText = styled.h1`\n  font-size: 42px;\n  color: #555;\n  margin-bottom: 24px;\n`;\n\nconst Input = styled.input`\n  padding: 14px;\n  border: 2px solid #aaa;\n  border-radius: 6px;\n  font-size: 16px;\n  outline: none;\n  margin-bottom: 16px;\n  transition: border-color 0.2s ease-in-out; \n\n  &:focus {\n    border-color: #007bff; \n    box-shadow: 0 0 5px rgba(0, 123, 255, 0.5); /* Add a subtle box-shadow when focused */\n  }\n\n  ::placeholder {\n    color: #888;\n  }\n`;\n\nexport { MainText, Input, Form};","import { useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport { Label } from './Login.styled';\nimport { Btn } from 'ui/Btn.styled';\nimport {\n  Form,\n  Input,\n  MainText,\n} from 'components/PhoneBook/PhoneBookStyles.styled';\nimport { NavLink } from 'react-router-dom';\nimport { Text } from 'ui/Text.styled';\nimport { Container } from 'ui/Container.styled';\nimport { useLoginMutation } from 'redux/auth/authApi';\nimport { useDispatch } from 'react-redux';\nimport { setToken } from 'redux/auth/Slice';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n};\n\nfunction Login() {\n  const [formData, setFormData] = useState({ ...INITIAL_STATE });\n  const [login] = useLoginMutation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleInputChange = e => {\n    const { name, value } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (formData.email && formData.password) {\n      const { data } = await login(formData);\n      if (data) {\n        dispatch(setToken(data.token));\n        navigate('/');\n      }\n    }\n    reset();\n  };\n  const reset = () => {\n    setFormData({ ...INITIAL_STATE });\n  };\n  return (\n    <Container>\n      <MainText>Sign In</MainText>\n      <Form onSubmit={handleSubmit}>\n        <Label htmlFor=\"email\">Email</Label>\n        <Input\n          type=\"email\"\n          id=\"email\"\n          name=\"email\"\n          value={formData.email}\n          onChange={handleInputChange}\n          placeholder=\"example@gmial.com\"\n          required\n        />\n        <Label htmlFor=\"password\">Password:</Label>\n        <Input\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          value={formData.password}\n          onChange={handleInputChange}\n          placeholder=\"Password\"\n          pattern=\".{8,12}\"\n          title=\"Password must be between 8 and 12 characters\"\n          required\n        />\n\n        <Btn type=\"submit\">Submit</Btn>\n      </Form>\n      <Text>\n        If you don't have the account{' '}\n        <NavLink to=\"/register\">click here</NavLink>\n      </Text>\n    </Container>\n  );\n}\n\nexport default Login;\n","import Login from 'components/Login/Login'\n\n\nfunction LoginPage() {\n  return (\n    <Login/>\n  )\n}\n\nexport default LoginPage\n","import styled from \"@emotion/styled\";\nconst Text = styled.p`\n  font-size: 20px;\n  color: #666;\n  margin-bottom: 18px;\n`;\nexport {Text}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["Label","styled","Form","MainText","Input","INITIAL_STATE","email","password","useState","formData","setFormData","useLoginMutation","login","dispatch","useDispatch","navigate","useNavigate","handleInputChange","e","target","name","value","prevState","handleSubmit","preventDefault","data","setToken","token","reset","onSubmit","htmlFor","type","id","onChange","placeholder","required","pattern","title","to","Text","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}